{"basics":{"name":"Nguyen Luong","label":"Data Scientist","email":"nguyen.luong@aalto.fi","phone":"+358 44 240 4485","url":"https://lnknguyen.xyz","summary":"Vietnamese-born data scientist/engineer. Interested in reproducible and open science enabled by high-quality software."},"work":[{"name":"Aalto University","position":"Doctoral Researcher","startDate":"2021-11","endDate":"2025-10","summary":"Quantifying human behavior and routine persistence from digital traces (expected completion Oct 2025)."},{"name":"ParkMan","position":"iOS Developer","startDate":"2016-12","endDate":"2020-12","summary":"Designed a modular codebase and implemented CI/CD; focused on testability, release automation, and app performance."}],"education":[{"institution":"Aalto University","location":"Espoo, Finland","area":"Machine Learning, Data Science, Artificial Intelligence","studyType":"Master of Science","startDate":"2018-08","endDate":"2021-07"}],"skills":[{"name":"Machine Learning","keywords":["Supervised learning (classification, regression)","Unsupervised learning (clustering, dimensionality reduction)","Time-series modeling","Feature engineering","Model selection & hyperparameter tuning (grid/random/Bayesian search)","Cross-validation & resampling","scikit-learn","XGBoost / LightGBM / CatBoost","Model evaluation (ROC-AUC, PR-AUC, F1, calibration)","Interpretability (SHAP, permutation importance)","Pipelines (scikit-learn Pipelines, MLflow)"]},{"name":"Deep Learning","keywords":["PyTorch","TensorFlow","Convolutional neural networks (CNNs)","Recurrent models (RNN, LSTM, GRU)","Transformers & attention","Sequence / time-series modeling","GPU acceleration (CUDA)"]},{"name":"Statistical Modeling","keywords":["Linear & generalized linear models (GLM)","Mixed-effects / multilevel models (LMM/GLMM)","Bayesian inference (Stan, PyMC)","Survival analysis (Cox, parametric models)","Hypothesis testing & multiple testing (FDR, Bonferroni)","Bootstrapping & permutation tests","Model diagnostics & residual analysis"]},{"name":"Software Development","keywords":["Modular architecture (package boundaries, layered/hexagonal design)","Dependency injection & interface-driven design","Testability: unit, integration, end-to-end","CI/CD: GitHub Actions, GitLab CI, CircleCI","Coverage & quality gates: coverage.py, Codecov","Packaging & releases: pyproject.toml/Poetry, semantic versioning, changelog automation","Containerization: Docker","Documentation: Sphinx, MkDocs, mkdocstrings","iOS development: Swift, SwiftUI, UIKit","Xcode toolchain: Swift Package Manager, CocoaPods","Reactive/data layers: Combine, Core Data","iOS testing: XCTest, XCUITest, test doubles/mocks","Mobile CI/CD: Fastlane, TestFlight, App Store Connect"]}],"languages":[{"language":"Vietnamese","fluency":"Native speaker"},{"language":"English","fluency":"Fluent"}]}